#pragma checksum "C:\Users\Zachariasz\Desktop\Zachariasz Jankowski\Views\Projects\Gui.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cc7cb5abb586dd2f8673b40d7342f18ab09d284b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Projects_Gui), @"mvc.1.0.view", @"/Views/Projects/Gui.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Zachariasz\Desktop\Zachariasz Jankowski\Views\_ViewImports.cshtml"
using Zachariasz_Jankowski;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Zachariasz\Desktop\Zachariasz Jankowski\Views\_ViewImports.cshtml"
using Zachariasz_Jankowski.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cc7cb5abb586dd2f8673b40d7342f18ab09d284b", @"/Views/Projects/Gui.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4f9309c3dc0693d8b22ca99e3d0777860a302bb0", @"/Views/_ViewImports.cshtml")]
    public class Views_Projects_Gui : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "footer", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/folding.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Zachariasz\Desktop\Zachariasz Jankowski\Views\Projects\Gui.cshtml"
  
    ViewData["Title"] = "GUI Windows App";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"



<main>
    <div class=""bg-white article container col-lg-6 offset-lg-3 pl-0 pr-0"">



        <div class=""top_gui m-0 pl-0 pr-0"">


            <div class=""backProject  col-lg-10 offset-lg-1""><a class=""backBG p-1 pr-2"" href=""/Projects""><img src=""/Images/arrow.png"" width=""20"" height=""20"" class=""d-inline-block""");
            BeginWriteAttribute("alt", " alt=\"", 377, "\"", 383, 0);
            EndWriteAttribute();
            WriteLiteral("><i");
            BeginWriteAttribute("class", " class=\"", 387, "\"", 395, 0);
            EndWriteAttribute();
            WriteLiteral(@">back to project selection</i></a></div>

            <h1 class=""projects d-flex justify-content-center pb-0 mb-0 mt-3""><b class=""shadow-sm  titleTop pl-2 pr-2"">GUI Windows App</b></h1>
            <div class=""under d-flex justify-content-center mt-0 ""><strong class=""title pl-2 pr-2 shadow-sm  "">Java</strong></div>

        </div>

        <div class=""pt-5 col-lg-10 offset-lg-1"">


");
#nullable restore
#line 26 "C:\Users\Zachariasz\Desktop\Zachariasz Jankowski\Views\Projects\Gui.cshtml"
              
                string timeSpan = "";
                int days = (int)ViewData["days"];
                if (days == 0) timeSpan = "today";
                if (days == 1) timeSpan = "yesterday";
                else if (days > 0 && days < 30) timeSpan = days.ToString() + " days ago";
                else if (days >= 30)
                {
                    int fullMonths = (days-(days%30))/30;
                    if (fullMonths == 1) timeSpan = fullMonths.ToString() + " month ago";
                    else timeSpan = fullMonths.ToString() + " months ago";
                }
            

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n\r\n\r\n            <div class=\"d-flex justify-content-start\">\r\n                <img src=\"/Images/icons/dt.png\" width=\"20\" height=\"20\" class=\"d-inline-block mr-1 \"");
            BeginWriteAttribute("alt", " alt=\"", 1576, "\"", 1582, 0);
            EndWriteAttribute();
            WriteLiteral(@">Repository: <a class=""pl-1"" target=""_blank"" href=""https://github.com/JankowskiZachariasz/GUI-Windows-App""> Link</a>
            </div>

            <div class=""d-flex justify-content-start"">
                <img src=""/Images/icons/calendar.png"" width=""20"" height=""20"" class=""d-inline-block mr-1 """);
            BeginWriteAttribute("alt", " alt=\"", 1884, "\"", 1890, 0);
            EndWriteAttribute();
            WriteLiteral(">Last update: <a class=\"pl-1\" target=\"_blank\" href=\"https://github.com/JankowskiZachariasz/GUI-Windows-App/commits/master\"> ");
#nullable restore
#line 48 "C:\Users\Zachariasz\Desktop\Zachariasz Jankowski\Views\Projects\Gui.cshtml"
                                                                                                                                                                                                                                       Write(timeSpan);

#line default
#line hidden
#nullable disable
            WriteLiteral("</a>\r\n            </div>\r\n\r\n            <div class=\"d-flex justify-content-start\">\r\n                <img src=\"/Images/icons/ppl.png\" width=\"20\" height=\"20\" class=\"d-inline-block mr-1 \"");
            BeginWriteAttribute("alt", " alt=\"", 2208, "\"", 2214, 0);
            EndWriteAttribute();
            WriteLiteral(@">Developer(s): [1] <a class=""pl-1"" target=""_blank"" href=""https://github.com/JankowskiZachariasz""> Zachariasz Jankowski</a>
            </div>



            <hr>






            <div class=""sect  p-1 pl-2 rounded d-flex d-inline-block"" onclick=""toggle('1')""><h4 class=""mb-0"">Introduction</h4> <h4 id=""i1"" class=""mb-0 ml-auto mr-2"">+</h4> </div>
            <div id=""t1"" class=""par mb-2"">
                <div class=""p-2"">
                    <p class=""p-2"">
                        This project was a university assignment. My task was to design and implement a basic GUI application that would send instructions to a small 2-wheeled robot to make it traverse a zigzag of a given length and number of sections. 
                    </p>
                    <p class=""p-2"">
                        To create a graphical interface for my application, I decided to use the SWT library. As it turned out, this wasn't the best choice as I could have developed all the functionalities just using Swing's JFram");
            WriteLiteral(@"e, which is available on every Windows device.
                    </p>
                    <a class=""d-flex justify-content-center pb-5"" target=""_blank"" href=""\Images\projects\gui_screen.png""><img class=""dontexceed"" src=""\Images\projects\gui_screen.png"" class=""d-inline-block mr-1 """);
            BeginWriteAttribute("alt", " alt=\"", 3524, "\"", 3530, 0);
            EndWriteAttribute();
            WriteLiteral(@"></a>
                </div>
            </div>


            <div class=""sect  p-1 pl-2 rounded d-flex d-inline-block"" onclick=""toggle('5')""><h4 class=""mb-0"">Code</h4> <h4 id=""i5"" class=""mb-0 ml-auto mr-2"">+</h4> </div>
            <div id=""t5"" class=""par mb-2"">
                <div class=""p-2"">
                    <p>The application consists of 3 Java classes (excluding external libraries):</p>
                    <ul>
                        <li><a target=""_blank"" href=""https://github.com/JankowskiZachariasz/GUI-Windows-App/blob/master/src/Core.java"">Core.java</a><i class=""codeComment""> <- Main logic and calculations </i></li>
                        <li><a target=""_blank"" href=""https://github.com/JankowskiZachariasz/GUI-Windows-App/blob/master/src/GUI.java"">GUI.java</a><i class=""codeComment""> <- initializes GUI and handles its events</i></li>
                        <li><a target=""_blank"" href=""https://github.com/JankowskiZachariasz/GUI-Windows-App/blob/master/src/Traveler.java"">Traveler.java<");
            WriteLiteral(@"/a><i class=""codeComment""> <- sends precise, direct instructions to the robot </i></li>
                    </ul>

                </div>
            </div>

            <div class=""sect  p-1 pl-2 rounded d-flex d-inline-block"" onclick=""toggle('2')""><h4 class=""mb-0"">Requirements</h4> <h4 id=""i2"" class=""mb-0 ml-auto mr-2"">+</h4> </div>
            <div id=""t2"" class=""par mb-2"">
                <div class=""p-2"">
                    <br/>
                    <h4>Functional Requirements</h4>
                    <ol>
                        <li class=""pt-2"">Program should display a Graphical User Interface which enables user to enter:
                            <ul>
                                <li>Length of a zigzag section in centimetres (range: 20cm - 80cm)</li>
                                <li>The number of zigzag sections (number must be even and should not exceed 10)</li>
                            </ul>
                        </li>
                        <li class=""pt-2"">Program ");
            WriteLiteral(@"should check the input data and prompt user with an error message in case it doesn’t meet the requirements.</li>
                        <li class=""pt-2"">Finch robot, operated by the program, should move in a zigzag fashion - accordingly to the
                        input data, given by the user. Calculated zigzag path should be travelled both ways. A turnaround manoeuvre must be done midway through. </li>
                        <li class=""pt-2"">Instructions received by the robot should be fine-tuned so that the actual travelled distances
                        are close to those specified by the user</li>
                        <li class=""pt-2"">Finch robot should move with a randomly generated velocity.</li>
                        <li class=""pt-2"">Finch robot should light a correct colour of its LED while traversing each of the zigzag
                        sections (alternately green and red).</li>
                        <li class=""pt-2"">Finch robot should make a sound with its buzzer while ");
            WriteLiteral(@"traversing each of the zigzag sections
                        (the sound should be altered after reaching to every next section - resulting in 2 tunes
                        sounding alternately).</li>
                        <li class=""pt-2"">Program should write the following information to a text file:
                            <ul>
                                <li>Length of a traversed path</li>
                                <li>The distance travelled</li>
                                <li>The start time and the end time</li>
                            </ul>
                        </li>

                    </ol>
                    <br/>
                    <h4>Functional Requirements -> GUI Design</h4>
                    
                    <a target=""_blank"" href=""\Images\projects\design.png""><img src=""\Images\projects\design.png"" class=""dontexceed d-inline-block mr-1 """);
            BeginWriteAttribute("alt", " alt=\"", 7521, "\"", 7527, 0);
            EndWriteAttribute();
            WriteLiteral(@"></a>
                    <br/>
                    <br/>
                    <h4>GUI Design -> GUI System Requirements</h4>
                    <ol>
                        <li class=""pt-2"">Initializing the GUI widgets:
                            <ul>
                                <li>2 input boxes</li>
                                <li>2 Labels </li>
                                <li>Button </li>
                                <li>Progress Bar </li>
                                <li>Canvas (for displaying the preview) </li>
                            </ul>
                        </li>
                        <li class=""pt-2"">Displaying the preview </li>
                        <li class=""pt-2"">Showing progress with the progress bar</li>
                        <li class=""pt-2"">Changing ‘start’ button to ‘abort’ button</li>
                        <li class=""pt-2"">Sending user’s input to the core part of the program</li>
                        <li class=""pt-2"">Aborting executio");
            WriteLiteral(@"n of the program once ‘abort button’ has been clicked</li>
                    </ol>
                    <br/>

                </div>
            </div>


            <div class=""sect  p-1 pl-2 rounded d-flex d-inline-block"" onclick=""toggle('7')""><h4 class=""mb-0"">Variables</h4> <h4 id=""i7"" class=""mb-0 ml-auto mr-2"">+</h4> </div>
            <div id=""t7"" class=""par mb-2"">
                <div class=""p-2 pt-4 pb-4"">
<div class=""pic"">
<table class=""table-sm table-striped"">
    <tbody>
        <tr class=""table-dark"">
            <td width=""182"" valign=""top"">
                <p>
                    <strong>Name</strong>
                </p>
            </td>
            <td width=""132"" valign=""top"">
                <p>
                    <strong>Type</strong>
                </p>
            </td>
            <td width=""162"" valign=""top"">
                <p>
                    <strong>Physical unit / format </strong>
                </p>
            </td>
            <td width=""164");
            WriteLiteral(@""" valign=""top"">
                <p>
                    <strong>Description</strong>
                </p>
            </td>
        </tr>
        <tr>
            <td width=""182"" valign=""top"">
                <p>
                    <strong>length</strong>
                </p>
            </td>
            <td width=""132"" valign=""top"">
                <p>
                    Float
                </p>
            </td>
            <td width=""162"" valign=""top"">
                <p>
                    Centimetres
                </p>
            </td>
            <td width=""164"" valign=""top"">
                <p>
                    Length of each section
                </p>
            </td>
        </tr>
        <tr>
            <td width=""182"" valign=""top"">
                <p>
                    <strong>zigzagQuantity</strong>
                </p>
            </td>
            <td width=""132"" valign=""top"">
                <p>
                    Integer
                <");
            WriteLiteral(@"/p>
            </td>
            <td width=""162"" valign=""top"">
                <p>
                    N/A
                </p>
            </td>
            <td width=""164"" valign=""top"">
                <p>
                    Quantity of sections
                </p>
            </td>
        </tr>
        <tr>
            <td width=""182"" valign=""top"">
                <p>
                    <strong>velocity</strong>
                </p>
            </td>
            <td width=""132"" valign=""top"">
                <p>
                    Integer
                </p>
            </td>
            <td width=""162"" valign=""top"">
                <p>
                    N/A
                </p>
            </td>
            <td width=""164"" valign=""top"">
                <p>
                    Value used in a <em>‘setWheelVelocities()’</em> method as a
                    velocity for both wheels
                </p>
            </td>
        </tr>
        <tr>
            <td w");
            WriteLiteral(@"idth=""182"" valign=""top"">
                <p>
                    <strong>startTime</strong>
                </p>
            </td>
            <td width=""132"" valign=""top"">
                <p>
                    String
                </p>
            </td>
            <td width=""162"" valign=""top"">
                <p>
                    HH:MM:SS
                </p>
            </td>
            <td width=""164"" valign=""top"">
                <p>
                    Time when finch starts traversing the Zigzag
                </p>
            </td>
        </tr>
        <tr>
            <td width=""182"" valign=""top"">
                <p>
                    <strong>timeSection</strong>
                </p>
            </td>
            <td width=""132"" valign=""top"">
                <p>
                    Integer
                </p>
            </td>
            <td width=""162"" valign=""top"">
                <p>
                    Milliseconds
                </p>
           ");
            WriteLiteral(@" </td>
            <td width=""164"" valign=""top"">
                <p>
                    Time needed for traversing one section
                </p>
            </td>
        </tr>
        <tr>
            <td width=""182"" valign=""top"">
                <p>
                    <strong>sectionPairs</strong>
                </p>
            </td>
            <td width=""132"" valign=""top"">
                <p>
                    Integer
                </p>
            </td>
            <td width=""162"" valign=""top"">
                <p>
                    N/A
                </p>
            </td>
            <td width=""164"" valign=""top"">
                <p>
                    Quantity of section pairs that are yet to be traversed
                </p>
            </td>
        </tr>
        <tr>
            <td width=""182"" valign=""top"">
                <p>
                    <strong>pathLength</strong>
                </p>
            </td>
            <td width=""132"" valign=""to");
            WriteLiteral(@"p"">
                <p>
                    Double
                </p>
            </td>
            <td width=""162"" valign=""top"">
                <p>
                    Centimetres
                </p>
            </td>
            <td width=""164"" valign=""top"">
                <p>
                    Summarized distance travelled by the finch from the start
                    to the finish point
                </p>
            </td>
        </tr>
        <tr>
            <td width=""182"" valign=""top"">
                <p>
                    <strong>distance</strong>
                </p>
            </td>
            <td width=""132"" valign=""top"">
                <p>
                    Double
                </p>
            </td>
            <td width=""162"" valign=""top"">
                <p>
                    Centimetres
                </p>
            </td>
            <td width=""164"" valign=""top"">
                <p>
                    Straight line distance travell");
            WriteLiteral(@"ed by the finch
                </p>
            </td>
        </tr>
        <tr>
            <td width=""182"" valign=""top"">
                <p>
                    <strong>endTime</strong>
                </p>
            </td>
            <td width=""132"" valign=""top"">
                <p>
                    String
                </p>
            </td>
            <td width=""162"" valign=""top"">
                <p>
                    HH:MM:SS
                </p>
            </td>
            <td width=""164"" valign=""top"">
                <p>
                    Time when finch arrives back at the start point
                </p>
            </td>
        </tr>
    </tbody>
</table>
</div>
                </div>
            </div>

            <div class=""sect  p-1 pl-2 rounded d-flex d-inline-block"" onclick=""toggle('3')""><h4 class=""mb-0"">Flowchart</h4> <h4 id=""i3"" class=""mb-0 ml-auto mr-2"">+</h4> </div>
            <div id=""t3"" class=""par mb-2"">

                <div class=""");
            WriteLiteral("p-2\">\r\n\r\n                <br/>\r\n                <br/>\r\n                <a class=\"pt-5\" target=\"_blank\" href=\"\\Images\\projects\\graph1.png\"><img src=\"\\Images\\projects\\graph1.png\" width=\"100%\" class=\"d-inline-block mr-1 \"");
            BeginWriteAttribute("alt", " alt=\"", 15938, "\"", 15944, 0);
            EndWriteAttribute();
            WriteLiteral("></a>\r\n                <a target=\"_blank\" href=\"\\Images\\projects\\graph2.png\"><img src=\"\\Images\\projects\\graph2.png\" width=\"100%\" class=\"d-inline-block mr-1 \"");
            BeginWriteAttribute("alt", " alt=\"", 16102, "\"", 16108, 0);
            EndWriteAttribute();
            WriteLiteral(@"></a>

                </div>
            </div>




            <div class=""sect  p-1 pl-2 rounded d-flex d-inline-block"" onclick=""toggle('6')""><h4 class=""mb-0"">Testing</h4> <h4 id=""i6"" class=""mb-0 ml-auto mr-2"">+</h4> </div>
            <div id=""t6"" class=""par mb-2"">
                <div class=""p-2 pt-4 pb-4"">
                    <div class=""pic"">
<table class=""table-sm table-striped"">
    <tbody>
        <tr>
            <td width=""19""");
            BeginWriteAttribute("nowrap", " nowrap=\"", 16566, "\"", 16575, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 16638, "\"", 16647, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Requirement\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 16786, "\"", 16795, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Test\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 16927, "\"", 16936, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Expected Result\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 17079, "\"", 17088, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Actual Result\r\n                </p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width=\"19\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 17257, "\"", 17266, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    1\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 17395, "\"", 17404, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    GUI enables user to enter Length and Quantity.\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 17578, "\"", 17587, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    An attempt to type some numbers into the text boxes.\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 17767, "\"", 17776, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    It should be possible to type some numbers into the text\r\n                    boxes\r\n                </p>\r\n            </td>\r\n            <td class=\"table-success\" width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 18009, "\"", 18018, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    ✓ - it is possible.\r\n                </p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width=\"19\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 18193, "\"", 18202, 0);
            EndWriteAttribute();
            WriteLiteral(" rowspan=\"2\" valign=\"top\">\r\n                <p>\r\n                    2\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 18343, "\"", 18352, 0);
            EndWriteAttribute();
            WriteLiteral(" rowspan=\"2\" valign=\"top\">\r\n                <p>\r\n                    Input is validated\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 18510, "\"", 18519, 0);
            EndWriteAttribute();
            WriteLiteral(@" valign=""top"">
                <p>
            Trying to run the program with following input:<br/>
            <strong> length</strong> = (1, 3, -43, 19.9, 82, 80.0001);<br/>
            <strong>quantity</strong> = (0, 1, 3, 4.5, 5, 7, 9, -10.2, 100, 14);
                </p>
            </td>
            <td width=""189""");
            BeginWriteAttribute("nowrap", " nowrap=\"", 18850, "\"", 18859, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Program should consider this input invalid\r\n                </p>\r\n            </td>\r\n            <td class=\"table-success\"  width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 19052, "\"", 19061, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    ✓- program doesn’t accept this input\r\n                </p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 19254, "\"", 19263, 0);
            EndWriteAttribute();
            WriteLiteral(@" valign=""top"">
                <p>
            Trying to run the program with the following input:<br/>
            <strong>length</strong> = (20, 21, 22, 89, 75, 80, 79.99998) <br/>
            <strong>quantity</strong> = (2, 4, 6, 8, 10);
                </p>
            </td>
            <td width=""189""");
            BeginWriteAttribute("nowrap", " nowrap=\"", 19578, "\"", 19587, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Program should consider this input valid\r\n                </p>\r\n            </td>\r\n            <td class=\"table-success\"  width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 19778, "\"", 19787, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    ✓- program accepts this input\r\n                </p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width=\"19\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 19972, "\"", 19981, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    3\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 20110, "\"", 20119, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Finch moves in accordance to the task description\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 20296, "\"", 20305, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Starting program with length = 20 and number of sections = 4\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 20493, "\"", 20502, 0);
            EndWriteAttribute();
            WriteLiteral(@" valign=""top"">
                <p>
                    Finch should traverse 4 zigzag sections, turn around and
                    traverse them once again finishing at the starting point
                </p>
            </td>
            <td class=""table-success""  width=""189""");
            BeginWriteAttribute("nowrap", " nowrap=\"", 20787, "\"", 20796, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    ✓- finch does exactly that\r\n                </p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width=\"19\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 20978, "\"", 20987, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    4\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 21116, "\"", 21125, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Robot is fine-tuned to travel approximately the given\r\n                    length\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 21334, "\"", 21343, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Starting program with length= 20 and number of sections = 4\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 21530, "\"", 21539, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Finch should traverse 2 sections of length 20cm\r\n                </p>\r\n            </td>\r\n            <td class=\"table-danger\"  width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 21736, "\"", 21745, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    ❌-finch traversed 2 sections of length 30cm\r\n                </p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width=\"19\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 21944, "\"", 21953, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    5\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 22082, "\"", 22091, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Velocity is randomly generated\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 22249, "\"", 22258, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Generating 1000 numbers with the algorithm\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 22428, "\"", 22437, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Their mean value should be close to (150+50)/2=100\r\n                </p>\r\n            </td>\r\n            <td class=\"table-success\"  width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 22638, "\"", 22647, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    ✓ mean value = 99\r\n                </p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width=\"19\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 22820, "\"", 22829, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    6\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 22958, "\"", 22967, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Finch lights up its LED in accordance to the task description\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 23156, "\"", 23165, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Starting program with length = 20 and number of sections = 4\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 23353, "\"", 23362, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Program should light up red LED 4 times in total \r\n                </p>\r\n            </td>\r\n            <td  class=\"table-success\" width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 23562, "\"", 23571, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    ✓- finch does exactly that\r\n                </p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width=\"19\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 23753, "\"", 23762, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    7\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 23891, "\"", 23900, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Finch makes sound with its buzzer in accordance to the task\r\n                    description\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 24120, "\"", 24129, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Starting program with length = 20 and number of sections = 4\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 24317, "\"", 24326, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Program should play tune1 4 times in total\r\n                </p>\r\n            </td>\r\n            <td class=\"table-success\"  width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 24519, "\"", 24528, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    ✓- finch does exactly that\r\n                </p>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td width=\"19\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 24710, "\"", 24719, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    8\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 24848, "\"", 24857, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Program writes data to a text file\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 25019, "\"", 25028, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    Checking if program works even if the file already contains\r\n                    some data\r\n                </p>\r\n            </td>\r\n            <td width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 25246, "\"", 25255, 0);
            EndWriteAttribute();
            WriteLiteral(" valign=\"top\">\r\n                <p>\r\n                    The Program should simply replace 4 lines from the\r\n                    beginning with its data\r\n                </p>\r\n            </td>\r\n            <td  class=\"table-success\" width=\"189\"");
            BeginWriteAttribute("nowrap", " nowrap=\"", 25501, "\"", 25510, 0);
            EndWriteAttribute();
            WriteLiteral(@" valign=""top"">
                <p>
                    ✓- Program cleared the file, and wrote its data
                </p>
            </td>
        </tr>
    </tbody>
</table>

                    </div>
                </div>
            </div>




 
        </div>




    </div>

    <div class=""d-flex justify-content-center bg-white  col-lg-6 offset-lg-3 "">
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "cc7cb5abb586dd2f8673b40d7342f18ab09d284b39827", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    </div>
</main>
<script src=""https://code.jquery.com/jquery-3.3.1.slim.min.js"" integrity=""sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"" crossorigin=""anonymous""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"" integrity=""sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49"" crossorigin=""anonymous""></script>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cc7cb5abb586dd2f8673b40d7342f18ab09d284b41365", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<script>\r\n    toggle(\'1\');\r\n</script>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
